스프링부트란(15p)
    웹 프로그램을 쉽고 빠르게 만들 수 있도록 도와주는 자바의 웹 프레임워크.
    스프링부트는 스프링 프레임워크에 톰캣이라는 서버를 내장하고 여러 편의 기능들을 추가하였음.
    * 웹 프레임워크? : 쿠키처리, 로그인처리, db처리 등의 기능이 있는 일종의 웹 프로그램 스타터 키트.

장점
    1. 스프링부트는 튼튼한 웹 프레임워크 : 보안 공격을 기본으로 잘 막아줌. SQL인젝션, XSS, CSRF, 클릭재킹 등...
    2. 여러 기능이 있음 : 로그인기능, 페이징기능 등...
    3. WAS가 필요 없음 : 스프링만 사용하면 WAS가 필요하지만 기본으로 톰캣서버가 내장되어있음.
    4. 설정이 쉬움 : 스프링의 복잡한 설정을 자동화/단순화했음
    * WAS : 웹 애플리케이션과 서버 환경을 연결하는 중간다리 소프트웨어 플랫폼. 톰캣, 웹로직, 웹스피어, 제이보스, 제우스 등...

어노테이션(36p)
    import org.springframework.stereotype.Controller;
    이런식으로 기능과 어노테이션을 import한 다음 어노테이션을 붙여주면 해당 클래스가 컨트롤러 기능을 수행한다는걸 알려줌.
    이 어노테이션이 있어야 스프링부트 프레임워크가 컨트롤러로 인식.

Spring Boot Devtools
    컨트롤러 등을 변경해도 별도의 과정이 없으면 로컬 서버가 변경된 클래스를 즉시 반영하지 않음.
    매번 서버를 재시작하는 번거로움을 줄이기 위해 이걸 설치하면 좋음(자동 재가동)

디렉토리 살펴보기(52p)
    src/main/java : 자바 파일을 저장하는 공간
        - com.mysite.sbb : 자바파일을 저장하는 공간. 컨트롤러, 폼과 DTO, 엔티티, 서비스 등...
        - SbbApplication.java : 프로그램의 시작을 담당하는 파일. 프로젝트명 + Application.java
    src/main/resources : 자바파일을 제외한 HTML, CSS, JS, 환경파일 등을 저장하는 공간
        - templates디렉토리 : 템플릿파일 저장. html파일 저장.
        - static 디렉토리 : css, js, 이미지파일 등 저장.
        - application.properties : 프로젝트의 환경설정. 환경변수, db설정 등...
    src/test/java : 프로젝트에서 작성한 파일을 테스트하는 코드를 저장. 서버실행없이 테스트 가능.
    build.gradle : 그래들이 사용하는 환경파일. 그래들은 Groovy를 기반으로 한 빌드 도구.

ORM / JPA(61p)
    ORM : Object Relational Mapping. SQL을 사용하지 않고 DB를 관리할 수 있는 도구. 예를들어 아래처럼 사용 가능.
        Question q1 = new Question();
        q1.setId(1);
        q1.setSubject("ㅎㅇ");
        q1.setContent("ㅎㅎ");
        this.questionRepository.save(q1);
        DBMS의 종류와 관계없이 일관된 자바코드를 사용할 수 있음.
    JAP : Java Persistence API. 스프링부트는 JPA를 사용해서 DB를 관리함.
        JPA는 인터페이스 모음이므로 이 인터페이스를 구현한 실제 클래스가 필요(대표적으로 하이버네이트)

application.properties설정(64p)
    spring.h2.console.enabled=true : H2콘솔에 접속할건지 묻는 항목. H2콘솔은 H2 DB를 웹 UI로 보여줌
    spring.h2.console.path=/h2-console : H2콘솔로 접속하기위한 URL경로
    spring.datasource.url=jdbc:h2:~/local : DB에 접속하기위한 경로
    spring.datasource.driverClassName=org.h2.Driver : DB에 접속할 때 사용하는 드라이버 클래스명
    spring.datasource.username=sa : DB사용자명. 기본값이 sa
    spring.datasource.password= : DB 비밀번호.